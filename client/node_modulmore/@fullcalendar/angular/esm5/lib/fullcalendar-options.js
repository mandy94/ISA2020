/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/*
the docs point to this file as an index of options.
when this files is moved, update the docs.
*/
/** @type {?} */
export var INPUT_NAMES = [
    'header',
    'footer',
    'customButtons',
    'buttonIcons',
    'themeSystem',
    'bootstrapFontAwesome',
    'firstDay',
    'dir',
    'weekends',
    'hiddenDays',
    'fixedWeekCount',
    'weekNumbers',
    'weekNumbersWithinDays',
    'weekNumberCalculation',
    'businessHours',
    'showNonCurrentDates',
    'height',
    'contentHeight',
    'aspectRatio',
    'handleWindowResize',
    'windowResizeDelay',
    'eventLimit',
    'eventLimitClick',
    'timeZone',
    'now',
    'defaultView',
    'allDaySlot',
    'allDayText',
    'slotDuration',
    'slotLabelFormat',
    'slotLabelInterval',
    'snapDuration',
    'scrollTime',
    'minTime',
    'maxTime',
    'slotEventOverlap',
    'listDayFormat',
    'listDayAltFormat',
    'noEventsMessage',
    'defaultDate',
    'nowIndicator',
    'visibleRange',
    'validRange',
    'dateIncrement',
    'dateAlignment',
    'duration',
    'dayCount',
    'locales',
    'locale',
    'eventTimeFormat',
    'columnHeader',
    'columnHeaderFormat',
    'columnHeaderText',
    'columnHeaderHtml',
    'titleFormat',
    'weekLabel',
    'displayEventTime',
    'displayEventEnd',
    'eventLimitText',
    'dayPopoverFormat',
    'navLinks',
    'selectable',
    'selectMirror',
    'selectMinDistance',
    'unselectAuto',
    'unselectCancel',
    'defaultAllDayEventDuration',
    'defaultTimedEventDuration',
    'cmdFormatter',
    'defaultRangeSeparator',
    'selectConstraint',
    'selectOverlap',
    'selectAllow',
    'editable',
    'eventStartEditable',
    'eventDurationEditable',
    'eventConstraint',
    'eventOverlap',
    'eventAllow',
    'eventClassName',
    'eventClassNames',
    'eventBackgroundColor',
    'eventBorderColor',
    'eventTextColor',
    'eventColor',
    'events',
    'eventSources',
    'allDayDefault',
    'startParam',
    'endParam',
    'lazyFetching',
    'nextDayThreshold',
    'eventOrder',
    'rerenderDelay',
    'dragRevertDuration',
    'dragScroll',
    'longPressDelay',
    'eventLongPressDelay',
    'droppable',
    'dropAccept',
    'eventDataTransform',
    'allDayMaintainDuration',
    'eventResizableFromStart',
    'timeGridEventMinHeight',
    'allDayHtml',
    'eventDragMinDistance',
    'eventSourceFailure',
    'eventSourceSuccess',
    'forceEventDuration',
    'progressiveEventRendering',
    'selectLongPressDelay',
    'selectMinDistance',
    'timeZoneParam',
    'titleRangeSeparator',
    'buttonText',
    'views',
    'plugins',
    'schedulerLicenseKey',
    'resources',
    'resourceLabelText',
    'resourceOrder',
    'filterResourcesWithEvents',
    'resourceText',
    'resourceGroupField',
    'resourceGroupText',
    'resourceAreaWidth',
    'resourceColumns',
    'resourcesInitiallyExpanded',
    'slotWidth',
    'datesAboveResources',
    'googleCalendarApiKey',
    'refetchResourcesOnNavigate',
    'eventResourceEditable'
];
/** @type {?} */
export var INPUT_IS_DEEP = {
    header: true,
    footer: true,
    events: true,
    eventSources: true,
    resources: true
};
/** @type {?} */
export var OUTPUT_NAMES = [
    'windowResize',
    'dateClick',
    'eventClick',
    'navLinkDayClick',
    'navLinkWeekClick',
    'eventMouseEnter',
    'eventMouseLeave',
    'select',
    'unselect',
    'loading',
    'eventPositioned',
    'eventDragStart',
    'eventDragStop',
    'eventDrop',
    'eventResizeStart',
    'eventResizeStop',
    'eventResize',
    'drop',
    'eventReceive',
    'eventLeave',
    '_destroyed',
    'viewSkeletonRender',
    'viewSkeletonDestroy',
    'datesRender',
    'datesDestroy',
    'dayRender',
    'eventRender',
    'eventDestroy',
    'resourceRender'
];

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVsbGNhbGVuZGFyLW9wdGlvbnMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZnVsbGNhbGVuZGFyL2FuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvZnVsbGNhbGVuZGFyLW9wdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBS0EsV0FBYSxXQUFXLEdBQUc7SUFDekIsUUFBUTtJQUNSLFFBQVE7SUFDUixlQUFlO0lBQ2YsYUFBYTtJQUNiLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsVUFBVTtJQUNWLEtBQUs7SUFDTCxVQUFVO0lBQ1YsWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLHVCQUF1QjtJQUN2QixlQUFlO0lBQ2YscUJBQXFCO0lBQ3JCLFFBQVE7SUFDUixlQUFlO0lBQ2YsYUFBYTtJQUNiLG9CQUFvQjtJQUNwQixtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixVQUFVO0lBQ1YsS0FBSztJQUNMLGFBQWE7SUFDYixZQUFZO0lBQ1osWUFBWTtJQUNaLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsbUJBQW1CO0lBQ25CLGNBQWM7SUFDZCxZQUFZO0lBQ1osU0FBUztJQUNULFNBQVM7SUFDVCxrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsYUFBYTtJQUNiLGNBQWM7SUFDZCxjQUFjO0lBQ2QsWUFBWTtJQUNaLGVBQWU7SUFDZixlQUFlO0lBQ2YsVUFBVTtJQUNWLFVBQVU7SUFDVixTQUFTO0lBQ1QsUUFBUTtJQUNSLGlCQUFpQjtJQUNqQixjQUFjO0lBQ2Qsb0JBQW9CO0lBQ3BCLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLFlBQVk7SUFDWixjQUFjO0lBQ2QsbUJBQW1CO0lBQ25CLGNBQWM7SUFDZCxnQkFBZ0I7SUFDaEIsNEJBQTRCO0lBQzVCLDJCQUEyQjtJQUMzQixjQUFjO0lBQ2QsdUJBQXVCO0lBQ3ZCLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsYUFBYTtJQUNiLFVBQVU7SUFDVixvQkFBb0I7SUFDcEIsdUJBQXVCO0lBQ3ZCLGlCQUFpQjtJQUNqQixjQUFjO0lBQ2QsWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLFFBQVE7SUFDUixjQUFjO0lBQ2QsZUFBZTtJQUNmLFlBQVk7SUFDWixVQUFVO0lBQ1YsY0FBYztJQUNkLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osZUFBZTtJQUNmLG9CQUFvQjtJQUNwQixZQUFZO0lBQ1osZ0JBQWdCO0lBQ2hCLHFCQUFxQjtJQUNyQixXQUFXO0lBQ1gsWUFBWTtJQUNaLG9CQUFvQjtJQUNwQix3QkFBd0I7SUFDeEIseUJBQXlCO0lBQ3pCLHdCQUF3QjtJQUN4QixZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLG9CQUFvQjtJQUNwQixvQkFBb0I7SUFDcEIsb0JBQW9CO0lBQ3BCLDJCQUEyQjtJQUMzQixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLGVBQWU7SUFDZixxQkFBcUI7SUFFckIsWUFBWTtJQUNaLE9BQU87SUFDUCxTQUFTO0lBRVQscUJBQXFCO0lBQ3JCLFdBQVc7SUFDWCxtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLDJCQUEyQjtJQUMzQixjQUFjO0lBQ2Qsb0JBQW9CO0lBQ3BCLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIsaUJBQWlCO0lBQ2pCLDRCQUE0QjtJQUM1QixXQUFXO0lBQ1gscUJBQXFCO0lBQ3JCLHNCQUFzQjtJQUN0Qiw0QkFBNEI7SUFDNUIsdUJBQXVCO0NBQ3hCLENBQUM7O0FBRUYsV0FBYSxhQUFhLEdBQUc7SUFDM0IsTUFBTSxFQUFFLElBQUk7SUFDWixNQUFNLEVBQUUsSUFBSTtJQUNaLE1BQU0sRUFBRSxJQUFJO0lBQ1osWUFBWSxFQUFFLElBQUk7SUFDbEIsU0FBUyxFQUFFLElBQUk7Q0FDaEIsQ0FBQzs7QUFFRixXQUFhLFlBQVksR0FBRztJQUMxQixjQUFjO0lBQ2QsV0FBVztJQUNYLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixpQkFBaUI7SUFDakIsUUFBUTtJQUNSLFVBQVU7SUFDVixTQUFTO0lBQ1QsaUJBQWlCO0lBQ2pCLGdCQUFnQjtJQUNoQixlQUFlO0lBQ2YsV0FBVztJQUNYLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsYUFBYTtJQUNiLE1BQU07SUFDTixjQUFjO0lBQ2QsWUFBWTtJQUNaLFlBQVk7SUFFWixvQkFBb0I7SUFDcEIscUJBQXFCO0lBQ3JCLGFBQWE7SUFDYixjQUFjO0lBQ2QsV0FBVztJQUNYLGFBQWE7SUFDYixjQUFjO0lBQ2QsZ0JBQWdCO0NBQ2pCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxudGhlIGRvY3MgcG9pbnQgdG8gdGhpcyBmaWxlIGFzIGFuIGluZGV4IG9mIG9wdGlvbnMuXG53aGVuIHRoaXMgZmlsZXMgaXMgbW92ZWQsIHVwZGF0ZSB0aGUgZG9jcy5cbiovXG5cbmV4cG9ydCBjb25zdCBJTlBVVF9OQU1FUyA9IFtcbiAgJ2hlYWRlcicsXG4gICdmb290ZXInLFxuICAnY3VzdG9tQnV0dG9ucycsXG4gICdidXR0b25JY29ucycsXG4gICd0aGVtZVN5c3RlbScsXG4gICdib290c3RyYXBGb250QXdlc29tZScsXG4gICdmaXJzdERheScsXG4gICdkaXInLFxuICAnd2Vla2VuZHMnLFxuICAnaGlkZGVuRGF5cycsXG4gICdmaXhlZFdlZWtDb3VudCcsXG4gICd3ZWVrTnVtYmVycycsXG4gICd3ZWVrTnVtYmVyc1dpdGhpbkRheXMnLFxuICAnd2Vla051bWJlckNhbGN1bGF0aW9uJyxcbiAgJ2J1c2luZXNzSG91cnMnLFxuICAnc2hvd05vbkN1cnJlbnREYXRlcycsXG4gICdoZWlnaHQnLFxuICAnY29udGVudEhlaWdodCcsXG4gICdhc3BlY3RSYXRpbycsXG4gICdoYW5kbGVXaW5kb3dSZXNpemUnLFxuICAnd2luZG93UmVzaXplRGVsYXknLFxuICAnZXZlbnRMaW1pdCcsXG4gICdldmVudExpbWl0Q2xpY2snLFxuICAndGltZVpvbmUnLFxuICAnbm93JyxcbiAgJ2RlZmF1bHRWaWV3JyxcbiAgJ2FsbERheVNsb3QnLFxuICAnYWxsRGF5VGV4dCcsXG4gICdzbG90RHVyYXRpb24nLFxuICAnc2xvdExhYmVsRm9ybWF0JyxcbiAgJ3Nsb3RMYWJlbEludGVydmFsJyxcbiAgJ3NuYXBEdXJhdGlvbicsXG4gICdzY3JvbGxUaW1lJyxcbiAgJ21pblRpbWUnLFxuICAnbWF4VGltZScsXG4gICdzbG90RXZlbnRPdmVybGFwJyxcbiAgJ2xpc3REYXlGb3JtYXQnLFxuICAnbGlzdERheUFsdEZvcm1hdCcsXG4gICdub0V2ZW50c01lc3NhZ2UnLFxuICAnZGVmYXVsdERhdGUnLFxuICAnbm93SW5kaWNhdG9yJyxcbiAgJ3Zpc2libGVSYW5nZScsXG4gICd2YWxpZFJhbmdlJyxcbiAgJ2RhdGVJbmNyZW1lbnQnLFxuICAnZGF0ZUFsaWdubWVudCcsXG4gICdkdXJhdGlvbicsXG4gICdkYXlDb3VudCcsXG4gICdsb2NhbGVzJyxcbiAgJ2xvY2FsZScsXG4gICdldmVudFRpbWVGb3JtYXQnLFxuICAnY29sdW1uSGVhZGVyJyxcbiAgJ2NvbHVtbkhlYWRlckZvcm1hdCcsXG4gICdjb2x1bW5IZWFkZXJUZXh0JyxcbiAgJ2NvbHVtbkhlYWRlckh0bWwnLFxuICAndGl0bGVGb3JtYXQnLFxuICAnd2Vla0xhYmVsJyxcbiAgJ2Rpc3BsYXlFdmVudFRpbWUnLFxuICAnZGlzcGxheUV2ZW50RW5kJyxcbiAgJ2V2ZW50TGltaXRUZXh0JyxcbiAgJ2RheVBvcG92ZXJGb3JtYXQnLFxuICAnbmF2TGlua3MnLFxuICAnc2VsZWN0YWJsZScsXG4gICdzZWxlY3RNaXJyb3InLFxuICAnc2VsZWN0TWluRGlzdGFuY2UnLFxuICAndW5zZWxlY3RBdXRvJyxcbiAgJ3Vuc2VsZWN0Q2FuY2VsJyxcbiAgJ2RlZmF1bHRBbGxEYXlFdmVudER1cmF0aW9uJyxcbiAgJ2RlZmF1bHRUaW1lZEV2ZW50RHVyYXRpb24nLFxuICAnY21kRm9ybWF0dGVyJyxcbiAgJ2RlZmF1bHRSYW5nZVNlcGFyYXRvcicsXG4gICdzZWxlY3RDb25zdHJhaW50JyxcbiAgJ3NlbGVjdE92ZXJsYXAnLFxuICAnc2VsZWN0QWxsb3cnLFxuICAnZWRpdGFibGUnLFxuICAnZXZlbnRTdGFydEVkaXRhYmxlJyxcbiAgJ2V2ZW50RHVyYXRpb25FZGl0YWJsZScsXG4gICdldmVudENvbnN0cmFpbnQnLFxuICAnZXZlbnRPdmVybGFwJyxcbiAgJ2V2ZW50QWxsb3cnLFxuICAnZXZlbnRDbGFzc05hbWUnLFxuICAnZXZlbnRDbGFzc05hbWVzJyxcbiAgJ2V2ZW50QmFja2dyb3VuZENvbG9yJyxcbiAgJ2V2ZW50Qm9yZGVyQ29sb3InLFxuICAnZXZlbnRUZXh0Q29sb3InLFxuICAnZXZlbnRDb2xvcicsXG4gICdldmVudHMnLFxuICAnZXZlbnRTb3VyY2VzJyxcbiAgJ2FsbERheURlZmF1bHQnLFxuICAnc3RhcnRQYXJhbScsXG4gICdlbmRQYXJhbScsXG4gICdsYXp5RmV0Y2hpbmcnLFxuICAnbmV4dERheVRocmVzaG9sZCcsXG4gICdldmVudE9yZGVyJyxcbiAgJ3JlcmVuZGVyRGVsYXknLFxuICAnZHJhZ1JldmVydER1cmF0aW9uJyxcbiAgJ2RyYWdTY3JvbGwnLFxuICAnbG9uZ1ByZXNzRGVsYXknLFxuICAnZXZlbnRMb25nUHJlc3NEZWxheScsXG4gICdkcm9wcGFibGUnLFxuICAnZHJvcEFjY2VwdCcsXG4gICdldmVudERhdGFUcmFuc2Zvcm0nLFxuICAnYWxsRGF5TWFpbnRhaW5EdXJhdGlvbicsXG4gICdldmVudFJlc2l6YWJsZUZyb21TdGFydCcsXG4gICd0aW1lR3JpZEV2ZW50TWluSGVpZ2h0JyxcbiAgJ2FsbERheUh0bWwnLFxuICAnZXZlbnREcmFnTWluRGlzdGFuY2UnLFxuICAnZXZlbnRTb3VyY2VGYWlsdXJlJyxcbiAgJ2V2ZW50U291cmNlU3VjY2VzcycsXG4gICdmb3JjZUV2ZW50RHVyYXRpb24nLFxuICAncHJvZ3Jlc3NpdmVFdmVudFJlbmRlcmluZycsXG4gICdzZWxlY3RMb25nUHJlc3NEZWxheScsXG4gICdzZWxlY3RNaW5EaXN0YW5jZScsXG4gICd0aW1lWm9uZVBhcmFtJyxcbiAgJ3RpdGxlUmFuZ2VTZXBhcmF0b3InLFxuICAvLyBjb21wb3VuZCBPcHRpb25zSW5wdXQuLi5cbiAgJ2J1dHRvblRleHQnLFxuICAndmlld3MnLFxuICAncGx1Z2lucycsXG4gIC8vIHNjaGVkdWxlci4uLlxuICAnc2NoZWR1bGVyTGljZW5zZUtleScsXG4gICdyZXNvdXJjZXMnLFxuICAncmVzb3VyY2VMYWJlbFRleHQnLFxuICAncmVzb3VyY2VPcmRlcicsXG4gICdmaWx0ZXJSZXNvdXJjZXNXaXRoRXZlbnRzJyxcbiAgJ3Jlc291cmNlVGV4dCcsXG4gICdyZXNvdXJjZUdyb3VwRmllbGQnLFxuICAncmVzb3VyY2VHcm91cFRleHQnLFxuICAncmVzb3VyY2VBcmVhV2lkdGgnLFxuICAncmVzb3VyY2VDb2x1bW5zJyxcbiAgJ3Jlc291cmNlc0luaXRpYWxseUV4cGFuZGVkJyxcbiAgJ3Nsb3RXaWR0aCcsXG4gICdkYXRlc0Fib3ZlUmVzb3VyY2VzJyxcbiAgJ2dvb2dsZUNhbGVuZGFyQXBpS2V5JyxcbiAgJ3JlZmV0Y2hSZXNvdXJjZXNPbk5hdmlnYXRlJyxcbiAgJ2V2ZW50UmVzb3VyY2VFZGl0YWJsZSdcbl07XG5cbmV4cG9ydCBjb25zdCBJTlBVVF9JU19ERUVQID0ge1xuICBoZWFkZXI6IHRydWUsXG4gIGZvb3RlcjogdHJ1ZSxcbiAgZXZlbnRzOiB0cnVlLFxuICBldmVudFNvdXJjZXM6IHRydWUsXG4gIHJlc291cmNlczogdHJ1ZVxufTtcblxuZXhwb3J0IGNvbnN0IE9VVFBVVF9OQU1FUyA9IFtcbiAgJ3dpbmRvd1Jlc2l6ZScsXG4gICdkYXRlQ2xpY2snLFxuICAnZXZlbnRDbGljaycsXG4gICduYXZMaW5rRGF5Q2xpY2snLFxuICAnbmF2TGlua1dlZWtDbGljaycsXG4gICdldmVudE1vdXNlRW50ZXInLFxuICAnZXZlbnRNb3VzZUxlYXZlJyxcbiAgJ3NlbGVjdCcsXG4gICd1bnNlbGVjdCcsXG4gICdsb2FkaW5nJyxcbiAgJ2V2ZW50UG9zaXRpb25lZCcsXG4gICdldmVudERyYWdTdGFydCcsXG4gICdldmVudERyYWdTdG9wJyxcbiAgJ2V2ZW50RHJvcCcsXG4gICdldmVudFJlc2l6ZVN0YXJ0JyxcbiAgJ2V2ZW50UmVzaXplU3RvcCcsXG4gICdldmVudFJlc2l6ZScsXG4gICdkcm9wJyxcbiAgJ2V2ZW50UmVjZWl2ZScsXG4gICdldmVudExlYXZlJyxcbiAgJ19kZXN0cm95ZWQnLFxuICAvLyBUT0RPOiBtYWtlIHRoZXNlIGlucHV0cy4uLlxuICAndmlld1NrZWxldG9uUmVuZGVyJyxcbiAgJ3ZpZXdTa2VsZXRvbkRlc3Ryb3knLFxuICAnZGF0ZXNSZW5kZXInLFxuICAnZGF0ZXNEZXN0cm95JyxcbiAgJ2RheVJlbmRlcicsXG4gICdldmVudFJlbmRlcicsXG4gICdldmVudERlc3Ryb3knLFxuICAncmVzb3VyY2VSZW5kZXInXG5dO1xuIl19